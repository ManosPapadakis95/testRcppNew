Rcpp::sourceCpp("Rstudio/pow.cpp")
Rcpp::compileAttributes(R"(C:\Users\papad\Documents\GitHub\testRcpp)")
savehistory()
Rcpp::compileAttributes(R"(C:\Users\papad\Documents\GitHub\testRcpp)")
Rcpp::sourceCpp("~/Rstudio/pow.cpp")
tttt(10)
install.packages("Rfast2")
Rfast2::rbeta1
Rcpp::compileAttributes(r"(C:\Users\papad\Documents\GitHub\testRcpp)")
savehistory()
(1- 1.001/1.003)*100
(1- 1.002/1.003)*100
20000/1.09
(1- 1.008/1.026)*100
(1- 1.002/1.003)*100
(1- 1.002/1.003)*100
(1- 1.008/1.026)*100
1.002/1.003
1.008/1.026
1- 1.008/1.026
1.008<1.026
1- (1.008/1.026)
(1- 1.002/1.003)*100
1.002/1.003
1-1.002/1.003
(1- 1.002/1.003)*100
(1- 58/99)*100
(1- 60/99)*100
(1- 59/99)*100
x <- iris[1:30,1]
y <- iris[1:30, 2]
R = 999
## univariate
#dii is the sum of all pairwise distances of x
ni <- length(x)
i <- 1:ni
x <- Rfast::Sort(x)
sx <- sum(x)
dii <- 2 * sum(i * x) - (ni + 1) * sx
#djj is the sum of all pairwise distances of y
nj <- length(y)
j <- 1:nj
y <- Rfast::Sort(y)
sy <- sum(y)
s <- sx + sy
djj <- 2 * sum(j * y) - (nj + 1) * sy
n <- ni + nj  ## total sample size
z <- Rfast::Sort( c(x, y) )
##dij <- Rfast::dista(x, y, result = "sum")
dtot <- 2 * sum( ( 1:n ) * z ) - (n + 1) * s
dij <- dtot - dii - djj
stat <- dij - nj * dii / ni - ni * djj / nj
pstat <- numeric(R)
savehistory()
Rcpp::compileAttributes(r"(C:\Users\papad\Documents\GitHub\testRcppNew)")
testRcppNew::sum_vector(1:10)
Rcpp::compileAttributes(r"(C:\Users\papad\Documents\GitHub\testRcppNew)")
is
Rcpp::compileAttributes(r"(C:\Users\papad\Documents\GitHub\testRcppNew)")
Rcpp::compileAttributes(r"(C:\Users\papad\Documents\GitHub\testRcppNew)")
Rcpp::compileAttributes(r"(C:\Users\papad\Documents\GitHub\testRcppNew)")
testRcppNew::toTable(sample(100,100,T))
testRcppNew::toTable(sample(100,replace = T))
testRcppNew::toTable(sample.int(100,100,T))
sample.int(100,100,T)
testRcppNew::toTable(sample.int(1:100,100,T))
testRcppNew::toTable.char("3243533624633421352644523512353623")
