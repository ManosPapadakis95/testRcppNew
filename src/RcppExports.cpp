// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/testRcppNew_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Str::startsWith
bool Str::startsWith(std::string str, std::string substr);
RcppExport SEXP _testRcppNew_startsWith(SEXP strSEXP, SEXP substrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type str(strSEXP);
    Rcpp::traits::input_parameter< std::string >::type substr(substrSEXP);
    rcpp_result_gen = Rcpp::wrap(Str::startsWith(str, substr));
    return rcpp_result_gen;
END_RCPP
}
// Str::endsWith
bool Str::endsWith(std::string str, std::string substr);
RcppExport SEXP _testRcppNew_endsWith(SEXP strSEXP, SEXP substrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type str(strSEXP);
    Rcpp::traits::input_parameter< std::string >::type substr(substrSEXP);
    rcpp_result_gen = Rcpp::wrap(Str::endsWith(str, substr));
    return rcpp_result_gen;
END_RCPP
}
// Str::replaceSubstring
std::string Str::replaceSubstring(std::string s, std::string oldSubstr, std::string newSubstr);
RcppExport SEXP _testRcppNew_replaceSubstring(SEXP sSEXP, SEXP oldSubstrSEXP, SEXP newSubstrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type s(sSEXP);
    Rcpp::traits::input_parameter< std::string >::type oldSubstr(oldSubstrSEXP);
    Rcpp::traits::input_parameter< std::string >::type newSubstr(newSubstrSEXP);
    rcpp_result_gen = Rcpp::wrap(Str::replaceSubstring(s, oldSubstr, newSubstr));
    return rcpp_result_gen;
END_RCPP
}
// Str::toTable
std::map<std::string, double> Str::toTable(std::string x);
RcppExport SEXP _testRcppNew_toTable_char(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Str::toTable(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_testRcppNew_startsWith", (DL_FUNC) &_testRcppNew_startsWith, 2},
    {"_testRcppNew_endsWith", (DL_FUNC) &_testRcppNew_endsWith, 2},
    {"_testRcppNew_replaceSubstring", (DL_FUNC) &_testRcppNew_replaceSubstring, 3},
    {"_testRcppNew_toTable_char", (DL_FUNC) &_testRcppNew_toTable_char, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_testRcppNew(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
